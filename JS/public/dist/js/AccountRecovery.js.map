{"version":3,"file":"AccountRecovery.js","sources":["../../src/views/AccountRecovery.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { recoverAccount } from '../controllers/accountSlice';\nimport {\n  setMessage,\n  setMessageType,\n  setShowStatusBar,\n} from '../controllers/messageSlice';\n\nimport { isValidEmail } from '../../../utils/Validation';\n\nimport StatusBarComponent from '../../../components/StatusBarComponent';\n\nfunction AccountRecovery() {\n  const { emailEncoded, userActivationKey } = useParams();\n\n  const email = emailEncoded.replace(/%40/g, '@');\n\n  const dispatch = useDispatch();\n\n  const {\n    accountLoading,\n    accountSuccessMessage,\n    accountErrorMessage,\n    accountStatusCode,\n  } = useSelector((state) => state.account);\n\n  useEffect(() => {\n    if (accountLoading) {\n      dispatch(setShowStatusBar(Date.now()));\n    }\n  }, [accountLoading]);\n\n  useEffect(() => {\n    if (accountSuccessMessage) {\n      dispatch(setMessage(accountSuccessMessage));\n      dispatch(setMessageType('success'));\n      dispatch(setShowStatusBar(Date.now()));\n    }\n  }, [accountSuccessMessage]);\n\n  useEffect(() => {\n    if (accountStatusCode == 200) {\n      setTimeout(() => {\n        window.location.href = '/login';\n      }, 5000);\n    }\n  }, [accountStatusCode]);\n\n  useEffect(() => {\n    if (accountErrorMessage) {\n      dispatch(setMessage(accountErrorMessage));\n      dispatch(setMessageType('error'));\n      dispatch(setShowStatusBar(Date.now()));\n    }\n  }, [accountErrorMessage]);\n\n  useEffect(() => {\n    try {\n      if (isValidEmail(email)) {\n        dispatch(setMessageType('info'));\n        dispatch(\n          setMessage(\n            'Standbye while an attempt to recover your account is made.'\n          )\n        );\n\n        const activationRequest = {\n          email: email,\n          user_activation_key: userActivationKey,\n        };\n\n        dispatch(recoverAccount(activationRequest));\n      }\n    } catch (error) {\n      dispatch(setMessageType('error'));\n      dispatch(setMessage(error.message));\n      dispatch(setShowStatusBar(Date.now()));\n    }\n  }, [dispatch, email, userActivationKey]);\n\n  return (\n    <>\n      <main>\n        <StatusBarComponent />\n      </main>\n    </>\n  );\n}\n\nexport default AccountRecovery;\n"],"names":["AccountRecovery","emailEncoded","userActivationKey","useParams","email","replace","dispatch","useDispatch","accountLoading","accountSuccessMessage","accountErrorMessage","accountStatusCode","useSelector","state","account","useEffect","setShowStatusBar","Date","now","setMessage","setMessageType","setTimeout","window","location","href","isValidEmail","recoverAccount","user_activation_key","error","message","children","jsx","StatusBarComponent"],"mappings":"sIAeA,SAASA,GAAkB,CACzB,KAAM,CAAEC,aAAAA,EAAcC,kBAAAA,CAAkB,EAAIC,EAAU,EAEhDC,EAAQH,EAAaI,QAAQ,OAAQ,GAAG,EAExCC,EAAWC,IAEX,CACJC,eAAAA,EACAC,sBAAAA,EACAC,oBAAAA,EACAC,kBAAAA,CACE,EAAAC,EAAaC,GAAUA,EAAMC,OAAO,EAExCC,OAAAA,EAAAA,UAAU,IAAM,CACVP,GACFF,EAASU,EAAiBC,KAAKC,IAAI,CAAC,CAAC,CAEzC,EAAG,CAACV,CAAc,CAAC,EAEnBO,EAAAA,UAAU,IAAM,CACVN,IACOH,EAAAa,EAAWV,CAAqB,CAAC,EACjCH,EAAAc,EAAe,SAAS,CAAC,EAClCd,EAASU,EAAiBC,KAAKC,IAAI,CAAC,CAAC,EAEzC,EAAG,CAACT,CAAqB,CAAC,EAE1BM,EAAAA,UAAU,IAAM,CACVJ,GAAqB,KACvBU,WAAW,IAAM,CACfC,OAAOC,SAASC,KAAO,UACtB,GAAI,CAEX,EAAG,CAACb,CAAiB,CAAC,EAEtBI,EAAAA,UAAU,IAAM,CACVL,IACOJ,EAAAa,EAAWT,CAAmB,CAAC,EAC/BJ,EAAAc,EAAe,OAAO,CAAC,EAChCd,EAASU,EAAiBC,KAAKC,IAAI,CAAC,CAAC,EAEzC,EAAG,CAACR,CAAmB,CAAC,EAExBK,EAAAA,UAAU,IAAM,CACV,GAAA,CACEU,EAAarB,CAAK,IACXE,EAAAc,EAAe,MAAM,CAAC,EAC/Bd,EACEa,EACE,4DACF,CACF,EAOSb,EAAAoB,EALiB,CACxBtB,MAAAA,EACAuB,oBAAqBzB,EAGkB,CAAC,SAErC0B,EAAO,CACLtB,EAAAc,EAAe,OAAO,CAAC,EACvBd,EAAAa,EAAWS,EAAMC,OAAO,CAAC,EAClCvB,EAASU,EAAiBC,KAAKC,IAAI,CAAC,CAAC,CACvC,CACC,EAAA,CAACZ,EAAUF,EAAOF,CAAiB,CAAC,oBAInC4B,SAACC,EAAA,IAAA,OAAA,CACCD,SAACC,EAAAA,IAAAC,EAAA,EAAmB,EACtB,CACF,CAAA,CAEJ"}