{"version":3,"file":"PasswordRecovery.js","sources":["../../src/views/PasswordRecovery.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  setMessage,\n  setMessageType,\n  setShowStatusBar,\n} from '../controllers/messageSlice';\nimport { updatePassword } from '../controllers/passwordSlice';\n\nimport { isValidPassword } from '../../../utils/Validation';\n\nimport StatusBarComponent from '../../../components/StatusBarComponent';\n\nfunction PasswordRecovery() {\n  const { emailEncoded, confirmationCode } = useParams();\n\n  const email = emailEncoded.replace(/%40/g, '@');\n\n  const dispatch = useDispatch();\n\n  const {\n    passwordLoading,\n    passwordSuccessMessage,\n    passwordErrorMessage,\n    passwordStatusCode,\n  } = useSelector((state) => state.password);\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  useEffect(() => {\n    dispatch(setMessage('Please enter your desired password in both fields.'));\n    dispatch(setShowStatusBar(Date.now()));\n  }, []);\n\n  useEffect(() => {\n    if (passwordLoading) {\n      dispatch(setShowStatusBar(Date.now()));\n    }\n  }, [passwordLoading]);\n\n  useEffect(() => {\n    if (passwordSuccessMessage) {\n      dispatch(setMessage(passwordSuccessMessage));\n      dispatch(setMessageType('success'));\n      dispatch(setShowStatusBar(Date.now()));\n    }\n  }, [passwordSuccessMessage]);\n\n  useEffect(() => {\n    if (passwordErrorMessage) {\n      dispatch(setMessage(passwordErrorMessage));\n      dispatch(setMessageType('error'));\n      dispatch(setShowStatusBar(Date.now()));\n    }\n  }, [passwordErrorMessage]);\n\n  useEffect(() => {\n    if (passwordStatusCode == 200) {\n      dispatch(setShowStatusBar(Date.now()));\n\n      setTimeout(() => {\n        window.location.href = '/login';\n      }, 5000);\n    }\n  }, [passwordStatusCode]);\n\n  useEffect(() => {\n    if (passwordStatusCode == 403) {\n      dispatch(setShowStatusBar(Date.now()));\n\n      setTimeout(() => {\n        window.location.href = '/forgot';\n      }, 5000);\n    }\n  }, [passwordStatusCode]);\n\n  const handleChangePassword = (e) => {\n    try {\n      if (e.target.name == 'password' && isValidPassword(e.target.value)) {\n        setPassword(e.target.value);\n        dispatch(setMessage('The password entered is valid.'));\n        dispatch(setMessageType('success'));\n      }\n    } catch (error) {\n      dispatch(setMessage(error.message));\n      dispatch(setMessageType('error'));\n    }\n  };\n\n  const handleChangeConfirmPassword = (e) => {\n    try {\n      if (e.target.name == 'confirm-password' && e.target.value == password) {\n        setConfirmPassword(e.target.value);\n        dispatch(setMessage('The passwords match.'));\n        dispatch(setMessageType('success'));\n      } else {\n        throw new Error('The passwords do not match.');\n      }\n    } catch (error) {\n      dispatch(setMessage(error.message));\n      dispatch(setMessageType('error'));\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (password !== '' && confirmPassword !== '') {\n      dispatch(setMessage('Standby for confirmation of password change.'));\n      dispatch(setMessageType('info'));\n      dispatch(\n        updatePassword({ email, confirmationCode, password, confirmPassword })\n      );\n    }\n  };\n\n  return (\n    <>\n      <section>\n        <main>\n          <form action=\"\">\n            <table>\n              <thead></thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      onChange={handleChangePassword}\n                      required\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <input\n                      type=\"password\"\n                      name=\"confirm-password\"\n                      placeholder=\"Confirm Password\"\n                      onChange={handleChangeConfirmPassword}\n                      required\n                    />\n                  </td>\n                </tr>\n              </tbody>\n              <tfoot>\n                <tr>\n                  <td>\n                    <button\n                      type=\"submit\"\n                      onClick={handleSubmit}\n                      id=\"confirm_password_btn\">\n                      <h3>CONFIRM</h3>\n                    </button>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <StatusBarComponent />\n                  </td>\n                </tr>\n              </tfoot>\n            </table>\n          </form>\n        </main>\n      </section>\n    </>\n  );\n}\n\nexport default PasswordRecovery;\n"],"names":["PasswordRecovery","emailEncoded","confirmationCode","useParams","email","replace","dispatch","useDispatch","passwordLoading","passwordSuccessMessage","passwordErrorMessage","passwordStatusCode","useSelector","state","password","setPassword","useState","confirmPassword","setConfirmPassword","useEffect","setMessage","setShowStatusBar","Date","now","setMessageType","setTimeout","window","location","href","handleChangePassword","e","target","name","isValidPassword","value","error","message","handleChangeConfirmPassword","Error","handleSubmit","preventDefault","updatePassword","jsx","Fragment","children","action","jsxs","type","placeholder","onChange","required","onClick","id","StatusBarComponent"],"mappings":"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"}