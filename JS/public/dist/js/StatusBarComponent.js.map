{"version":3,"file":"StatusBarComponent.js","sources":["../../../../node_modules/react-redux/es/hooks/useStore.js","../../../../node_modules/react-redux/es/hooks/useDispatch.js","../../../components/StatusBarComponent.jsx"],"sourcesContent":["import { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext, createReduxContextHook } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context = ReactReduxContext) {\n  const useReduxContext = // @ts-ignore\n  context === ReactReduxContext ? useDefaultReduxContext : // @ts-ignore\n  createReduxContextHook(context);\n  return function useStore() {\n    const {\n      store\n    } = useReduxContext(); // @ts-ignore\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport const useStore = /*#__PURE__*/createStoreHook();","import { ReactReduxContext } from '../components/Context';\nimport { useStore as useDefaultStore, createStoreHook } from './useStore';\n/**\r\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useDispatch` hook bound to the specified context.\r\n */\n\nexport function createDispatchHook(context = ReactReduxContext) {\n  const useStore = // @ts-ignore\n  context === ReactReduxContext ? useDefaultStore : createStoreHook(context);\n  return function useDispatch() {\n    const store = useStore(); // @ts-ignore\n\n    return store.dispatch;\n  };\n}\n/**\r\n * A hook to access the redux `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */\n\nexport const useDispatch = /*#__PURE__*/createDispatchHook();","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction StatusBarComponent() {\n  const { message, messageType, showStatusBar } = useSelector(\n    (state) => state.message\n  );\n\n  const [show, setShow] = useState('show');\n\n  useEffect(() => {\n    if (showStatusBar) {\n      setShow('show');\n\n      const timer = setTimeout(() => {\n        setShow('hide');\n      }, 5000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [showStatusBar]);\n\n  const minimize = () => {\n    if (show == 'show') {\n      setShow('hide');\n    }\n  };\n\n  return (\n    message && (\n      <span className={`modal-overlay ${show}`}>\n        <div className=\"status\">\n          <span className=\"close\">\n            <button onClick={minimize}>\n              <h3>X</h3>\n            </button>\n          </span>\n\n          <div className={`status-bar card ${messageType}`} id=\"status_bar\">\n            <span>{message}</span>\n          </div>\n        </div>\n      </span>\n    )\n  );\n}\n\nexport default StatusBarComponent;\n"],"names":["createStoreHook","context","ReactReduxContext","useReduxContext","useDefaultReduxContext","createReduxContextHook","store","useStore","createDispatchHook","useDefaultStore","dispatch","useDispatch","StatusBarComponent","message","messageType","showStatusBar","useSelector","state","show","setShow","useState","useEffect","timer","setTimeout","clearTimeout","minimize","jsx","className","children","jsxs","onClick","id"],"mappings":"qEASO,SAASA,EAAgBC,EAAUC,EAAmB,CAC3D,MAAMC,EACNF,IAAYC,EAAoBE,EAChCC,EAAuBJ,CAAO,EAC9B,OAAO,UAAoB,CACzB,KAAM,CACJK,MAAAA,CACD,EAAGH,EAAe,EAEnB,OAAOG,EAEX,CAiBO,MAAMC,EAAwBP,EAAiB,EC5B/C,SAASQ,EAAmBP,EAAUC,EAAmB,CAC9D,MAAMK,EACNN,IAAYC,EAAoBO,EAAkBT,EAAgBC,CAAO,EACzE,OAAO,UAAuB,CAG5B,OAFcM,IAEDG,SAEjB,OAuBaC,EAA2BH,EAAkB,ECrC1D,SAASI,GAAqB,CAC5B,KAAM,CAAEC,QAAAA,EAASC,YAAAA,EAAaC,cAAAA,CAAkB,EAAAC,EAC7CC,GAAUA,EAAMJ,OACnB,EAEM,CAACK,EAAMC,CAAO,EAAIC,WAAS,MAAM,EAEvCC,EAAAA,UAAU,IAAM,CACd,GAAIN,EAAe,CACjBI,EAAQ,MAAM,EAER,MAAAG,EAAQC,WAAW,IAAM,CAC7BJ,EAAQ,MAAM,GACb,GAAI,EAEA,MAAA,IAAMK,aAAaF,CAAK,CACjC,CACF,EAAG,CAACP,CAAa,CAAC,EAElB,MAAMU,EAAWA,IAAM,CACjBP,GAAQ,QACVC,EAAQ,MAAM,GAKhB,OAAAN,GACGa,EAAA,IAAA,OAAA,CAAKC,UAAW,iBAAiBT,CAChC,GAAAU,SAAAC,EAAA,KAAC,MAAI,CAAAF,UAAU,SACbC,SAAA,CAACF,EAAA,IAAA,OAAA,CAAKC,UAAU,QACdC,SAACF,EAAA,IAAA,SAAA,CAAOI,QAASL,EACfG,SAACF,EAAA,IAAA,KAAA,CAAGE,SAAC,IAAA,EACP,CACF,CAAA,EAEAF,EAAA,IAAC,MAAI,CAAAC,UAA8B,mBAAAb,CAAe,GAAAiB,GAAG,aACnDH,SAAAF,EAAA,IAAC,OAAM,CAAAE,SAAAf,EAAQ,CACjB,CAAA,CAAA,EACF,CACF,CAAA,CAGN","x_google_ignoreList":[0,1]}