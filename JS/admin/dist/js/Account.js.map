{"version":3,"file":"Account.js","sources":["../../../components/StatusBarComponent.jsx","../../src/views/Account.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction StatusBarComponent() {\n  const { message, messageType, showStatusBar } = useSelector(\n    (state) => state.message\n  );\n\n  const [show, setShow] = useState('show');\n\n  useEffect(() => {\n    if (showStatusBar) {\n      setShow('show');\n\n      const timer = setTimeout(() => {\n        setShow('hide');\n      }, 5000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [showStatusBar]);\n\n  const minimize = () => {\n    if (show == 'show') {\n      setShow('hide');\n    }\n  };\n\n  return (\n    message && (\n      <span className={`modal-overlay ${show}`}>\n        <div className=\"status\">\n          <span className=\"close\">\n            <button onClick={minimize}>\n              <h3>X</h3>\n            </button>\n          </span>\n\n          <div className={`status-bar card ${messageType}`} id=\"status_bar\">\n            <span>{message}</span>\n          </div>\n        </div>\n      </span>\n    )\n  );\n}\n\nexport default StatusBarComponent;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport StatusBarComponent from '../../../components/StatusBarComponent';\n\nimport { setMessage, setMessageType } from '../controllers/messageSlice';\n\nimport AccountCreate from './AccountCreate';\nimport AccountFind from './AccountFind';\nimport AccountUpdate from './AccountUpdate';\n\nimport Details from './Details';\n\nfunction Account() {\n  const dispatch = useDispatch();\n\n  const {\n    accountError,\n    accountSuccessMessage,\n    accountErrorMessage,\n    email,\n    username,\n    firstname,\n    lastname,\n    nickname,\n    nicename,\n    roles,\n    phone,\n    isAuthenticated,\n    isCredentialsNonExpired,\n    isAccountNonLocked,\n    isEnabled,\n    isAccountNonExpired,\n  } = useSelector((state) => state.account);\n  const { changeError, changeSuccessMessage, changeErrorMessage } = useSelector(\n    (state) => state.change\n  );\n\n  const [showStatusbar, setShowStatusBar] = useState(false);\n  const [showCreate, setShowCreate] = useState(false);\n  const [showFind, setShowFind] = useState(false);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n\n  const handleCreate = () => {\n    setShowCreate(true);\n    setShowFind(false);\n    setShowUpdate(false);\n    setShowDetails(false);\n  };\n\n  const handleFind = () => {\n    setShowCreate(false);\n    setShowFind(true);\n    setShowUpdate(false);\n    setShowDetails(false);\n  };\n\n  const handleUpdate = () => {\n    setShowCreate(false);\n    setShowFind(false);\n    setShowUpdate(true);\n    setShowDetails(false);\n  };\n\n  const handleDetails = () => {\n    setShowCreate(false);\n    setShowFind(false);\n    setShowUpdate(false);\n    setShowDetails(true);\n  };\n\n  useEffect(() => {\n    if (\n      accountError ||\n      accountErrorMessage ||\n      changeError ||\n      changeErrorMessage\n    ) {\n      dispatch(setMessageType('error'));\n      setShowStatusBar(true);\n\n      setTimeout(() => {\n        setShowStatusBar(false);\n      }, 5000);\n\n      if (accountError) {\n\n        dispatch(setMessage(accountError));\n      }\n\n      if (accountErrorMessage) {\n        dispatch(setMessage(accountErrorMessage));\n      }\n\n      if (changeError) {\n        dispatch(setMessage(changeError));\n      }\n\n      if (changeErrorMessage) {\n        dispatch(setMessage(changeErrorMessage));\n      }\n    }\n  }, [accountError, accountErrorMessage, changeError, changeErrorMessage]);\n\n  useEffect(() => {\n    if (accountSuccessMessage || changeSuccessMessage) {\n      dispatch(setMessageType('success'));\n      setShowStatusBar(true);\n\n      setTimeout(() => {\n        setShowStatusBar(false);\n      }, 5000);\n\n      if (accountSuccessMessage) {\n        dispatch(setMessage(accountSuccessMessage));\n      }\n\n      if (changeSuccessMessage) {\n        dispatch(setMessage(changeSuccessMessage));\n      }\n    }\n  }, [accountSuccessMessage, changeSuccessMessage]);\n\n  return (\n    <>\n      <div class=\"account-management\" id=\"account_management\">\n        <div class=\"options\" id=\"options\">\n          <button onClick={handleCreate} id=\"create_account\">\n            <h3>Create Account</h3>\n          </button>\n\n          <button onClick={handleFind} id=\"find_account\">\n            <h3>Find Account</h3>\n          </button>\n\n          <button onClick={handleUpdate} id=\"update_account\">\n            <h3>Update Account</h3>\n          </button>\n\n          <button onClick={handleDetails} id=\"details\">\n            <h3>Details</h3>\n          </button>\n        </div>\n\n        {showCreate && <AccountCreate />}\n\n        {showFind && <AccountFind email={email} />}\n\n        {showUpdate && (\n          <AccountUpdate\n            usrname={username}\n            firstName={firstname}\n            lastName={lastname}\n            nickName={nickname}\n            niceName={nicename}\n            rolesSelected={roles}\n            phoneNumber={phone}\n          />\n        )}\n\n        {showDetails && (\n          <Details\n            email={email}\n            isAuthenticated={isAuthenticated}\n            isCredentialsNonExpired={isCredentialsNonExpired}\n            isAccountNonLocked={isAccountNonLocked}\n            isEnabled={isEnabled}\n            isAccountNonExpired={isAccountNonExpired}\n          />\n        )}\n\n        <span className={showStatusbar}>\n          <StatusBarComponent />\n        </span>\n      </div>\n    </>\n  );\n}\n\nexport default Account;\n"],"names":["StatusBarComponent","message","messageType","showStatusBar","useSelector","state","show","setShow","useState","useEffect","timer","setTimeout","clearTimeout","minimize","jsx","className","children","jsxs","onClick","id","Account","dispatch","useDispatch","accountError","accountSuccessMessage","accountErrorMessage","email","username","firstname","lastname","nickname","nicename","roles","phone","isAuthenticated","isCredentialsNonExpired","isAccountNonLocked","isEnabled","isAccountNonExpired","account","changeError","changeSuccessMessage","changeErrorMessage","change","showStatusbar","setShowStatusBar","showCreate","setShowCreate","showFind","setShowFind","showUpdate","setShowUpdate","showDetails","setShowDetails","handleCreate","handleFind","handleUpdate","handleDetails","setMessageType","setMessage","class","AccountCreate","AccountFind","AccountUpdate","usrname","firstName","lastName","nickName","niceName","rolesSelected","phoneNumber","Details"],"mappings":"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"}